@using OM.Application.Models.Paging
@model PaginatedList<OM.Application.Models.Member.MemberInputModel>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            <select name="Type">
                @Html.Raw("<option value='0'" + ("0".Equals(ViewData["Type"]) ? " selected" : "") + ">Hê lô</option>")
                @Html.Raw("<option value='1'" + ("1".Equals(ViewData["Type"]) ? " selected" : "") + ">Hau ai diu</option>")
            </select>
            <label>Find by name: <input type="text" name="Name" value="@ViewData["Name"]" /></label>
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Type</th>
            <th>Address</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPrevious ? "disabled" : "";
    var nextDisabled = !Model.HasNext ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-pageIndex="@(Model.PageIndex - 1)"
   asp-route-pageSize="@ViewData["PageSize"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-pageIndex="@(Model.PageIndex + 1)"
   asp-route-pageSize="@ViewData["PageSize"]"
   class="btn btn-default @nextDisabled">
    Next
</a>